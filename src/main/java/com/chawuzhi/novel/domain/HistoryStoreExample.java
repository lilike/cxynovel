package com.chawuzhi.novel.domain;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class HistoryStoreExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table history_store
     *
     * @mbggenerated Mon Oct 16 17:33:47 GMT+08:00 2017
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table history_store
     *
     * @mbggenerated Mon Oct 16 17:33:47 GMT+08:00 2017
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table history_store
     *
     * @mbggenerated Mon Oct 16 17:33:47 GMT+08:00 2017
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table history_store
     *
     * @mbggenerated Mon Oct 16 17:33:47 GMT+08:00 2017
     */
    public HistoryStoreExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table history_store
     *
     * @mbggenerated Mon Oct 16 17:33:47 GMT+08:00 2017
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table history_store
     *
     * @mbggenerated Mon Oct 16 17:33:47 GMT+08:00 2017
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table history_store
     *
     * @mbggenerated Mon Oct 16 17:33:47 GMT+08:00 2017
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table history_store
     *
     * @mbggenerated Mon Oct 16 17:33:47 GMT+08:00 2017
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table history_store
     *
     * @mbggenerated Mon Oct 16 17:33:47 GMT+08:00 2017
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table history_store
     *
     * @mbggenerated Mon Oct 16 17:33:47 GMT+08:00 2017
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table history_store
     *
     * @mbggenerated Mon Oct 16 17:33:47 GMT+08:00 2017
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table history_store
     *
     * @mbggenerated Mon Oct 16 17:33:47 GMT+08:00 2017
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table history_store
     *
     * @mbggenerated Mon Oct 16 17:33:47 GMT+08:00 2017
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table history_store
     *
     * @mbggenerated Mon Oct 16 17:33:47 GMT+08:00 2017
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table history_store
     *
     * @mbggenerated Mon Oct 16 17:33:47 GMT+08:00 2017
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andTableNameIsNull() {
            addCriterion("table_name is null");
            return (Criteria) this;
        }

        public Criteria andTableNameIsNotNull() {
            addCriterion("table_name is not null");
            return (Criteria) this;
        }

        public Criteria andTableNameEqualTo(String value) {
            addCriterion("table_name =", value, "tableName");
            return (Criteria) this;
        }

        public Criteria andTableNameNotEqualTo(String value) {
            addCriterion("table_name <>", value, "tableName");
            return (Criteria) this;
        }

        public Criteria andTableNameGreaterThan(String value) {
            addCriterion("table_name >", value, "tableName");
            return (Criteria) this;
        }

        public Criteria andTableNameGreaterThanOrEqualTo(String value) {
            addCriterion("table_name >=", value, "tableName");
            return (Criteria) this;
        }

        public Criteria andTableNameLessThan(String value) {
            addCriterion("table_name <", value, "tableName");
            return (Criteria) this;
        }

        public Criteria andTableNameLessThanOrEqualTo(String value) {
            addCriterion("table_name <=", value, "tableName");
            return (Criteria) this;
        }

        public Criteria andTableNameLike(String value) {
            addCriterion("table_name like", value, "tableName");
            return (Criteria) this;
        }

        public Criteria andTableNameNotLike(String value) {
            addCriterion("table_name not like", value, "tableName");
            return (Criteria) this;
        }

        public Criteria andTableNameIn(List<String> values) {
            addCriterion("table_name in", values, "tableName");
            return (Criteria) this;
        }

        public Criteria andTableNameNotIn(List<String> values) {
            addCriterion("table_name not in", values, "tableName");
            return (Criteria) this;
        }

        public Criteria andTableNameBetween(String value1, String value2) {
            addCriterion("table_name between", value1, value2, "tableName");
            return (Criteria) this;
        }

        public Criteria andTableNameNotBetween(String value1, String value2) {
            addCriterion("table_name not between", value1, value2, "tableName");
            return (Criteria) this;
        }

        public Criteria andPkDateDestIsNull() {
            addCriterion("pk_date_dest is null");
            return (Criteria) this;
        }

        public Criteria andPkDateDestIsNotNull() {
            addCriterion("pk_date_dest is not null");
            return (Criteria) this;
        }

        public Criteria andPkDateDestEqualTo(String value) {
            addCriterion("pk_date_dest =", value, "pkDateDest");
            return (Criteria) this;
        }

        public Criteria andPkDateDestNotEqualTo(String value) {
            addCriterion("pk_date_dest <>", value, "pkDateDest");
            return (Criteria) this;
        }

        public Criteria andPkDateDestGreaterThan(String value) {
            addCriterion("pk_date_dest >", value, "pkDateDest");
            return (Criteria) this;
        }

        public Criteria andPkDateDestGreaterThanOrEqualTo(String value) {
            addCriterion("pk_date_dest >=", value, "pkDateDest");
            return (Criteria) this;
        }

        public Criteria andPkDateDestLessThan(String value) {
            addCriterion("pk_date_dest <", value, "pkDateDest");
            return (Criteria) this;
        }

        public Criteria andPkDateDestLessThanOrEqualTo(String value) {
            addCriterion("pk_date_dest <=", value, "pkDateDest");
            return (Criteria) this;
        }

        public Criteria andPkDateDestLike(String value) {
            addCriterion("pk_date_dest like", value, "pkDateDest");
            return (Criteria) this;
        }

        public Criteria andPkDateDestNotLike(String value) {
            addCriterion("pk_date_dest not like", value, "pkDateDest");
            return (Criteria) this;
        }

        public Criteria andPkDateDestIn(List<String> values) {
            addCriterion("pk_date_dest in", values, "pkDateDest");
            return (Criteria) this;
        }

        public Criteria andPkDateDestNotIn(List<String> values) {
            addCriterion("pk_date_dest not in", values, "pkDateDest");
            return (Criteria) this;
        }

        public Criteria andPkDateDestBetween(String value1, String value2) {
            addCriterion("pk_date_dest between", value1, value2, "pkDateDest");
            return (Criteria) this;
        }

        public Criteria andPkDateDestNotBetween(String value1, String value2) {
            addCriterion("pk_date_dest not between", value1, value2, "pkDateDest");
            return (Criteria) this;
        }

        public Criteria andTimemarkIsNull() {
            addCriterion("timemark is null");
            return (Criteria) this;
        }

        public Criteria andTimemarkIsNotNull() {
            addCriterion("timemark is not null");
            return (Criteria) this;
        }

        public Criteria andTimemarkEqualTo(Date value) {
            addCriterion("timemark =", value, "timemark");
            return (Criteria) this;
        }

        public Criteria andTimemarkNotEqualTo(Date value) {
            addCriterion("timemark <>", value, "timemark");
            return (Criteria) this;
        }

        public Criteria andTimemarkGreaterThan(Date value) {
            addCriterion("timemark >", value, "timemark");
            return (Criteria) this;
        }

        public Criteria andTimemarkGreaterThanOrEqualTo(Date value) {
            addCriterion("timemark >=", value, "timemark");
            return (Criteria) this;
        }

        public Criteria andTimemarkLessThan(Date value) {
            addCriterion("timemark <", value, "timemark");
            return (Criteria) this;
        }

        public Criteria andTimemarkLessThanOrEqualTo(Date value) {
            addCriterion("timemark <=", value, "timemark");
            return (Criteria) this;
        }

        public Criteria andTimemarkIn(List<Date> values) {
            addCriterion("timemark in", values, "timemark");
            return (Criteria) this;
        }

        public Criteria andTimemarkNotIn(List<Date> values) {
            addCriterion("timemark not in", values, "timemark");
            return (Criteria) this;
        }

        public Criteria andTimemarkBetween(Date value1, Date value2) {
            addCriterion("timemark between", value1, value2, "timemark");
            return (Criteria) this;
        }

        public Criteria andTimemarkNotBetween(Date value1, Date value2) {
            addCriterion("timemark not between", value1, value2, "timemark");
            return (Criteria) this;
        }

        public Criteria andRecordStateIsNull() {
            addCriterion("record_state is null");
            return (Criteria) this;
        }

        public Criteria andRecordStateIsNotNull() {
            addCriterion("record_state is not null");
            return (Criteria) this;
        }

        public Criteria andRecordStateEqualTo(Integer value) {
            addCriterion("record_state =", value, "recordState");
            return (Criteria) this;
        }

        public Criteria andRecordStateNotEqualTo(Integer value) {
            addCriterion("record_state <>", value, "recordState");
            return (Criteria) this;
        }

        public Criteria andRecordStateGreaterThan(Integer value) {
            addCriterion("record_state >", value, "recordState");
            return (Criteria) this;
        }

        public Criteria andRecordStateGreaterThanOrEqualTo(Integer value) {
            addCriterion("record_state >=", value, "recordState");
            return (Criteria) this;
        }

        public Criteria andRecordStateLessThan(Integer value) {
            addCriterion("record_state <", value, "recordState");
            return (Criteria) this;
        }

        public Criteria andRecordStateLessThanOrEqualTo(Integer value) {
            addCriterion("record_state <=", value, "recordState");
            return (Criteria) this;
        }

        public Criteria andRecordStateIn(List<Integer> values) {
            addCriterion("record_state in", values, "recordState");
            return (Criteria) this;
        }

        public Criteria andRecordStateNotIn(List<Integer> values) {
            addCriterion("record_state not in", values, "recordState");
            return (Criteria) this;
        }

        public Criteria andRecordStateBetween(Integer value1, Integer value2) {
            addCriterion("record_state between", value1, value2, "recordState");
            return (Criteria) this;
        }

        public Criteria andRecordStateNotBetween(Integer value1, Integer value2) {
            addCriterion("record_state not between", value1, value2, "recordState");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table history_store
     *
     * @mbggenerated do_not_delete_during_merge Mon Oct 16 17:33:47 GMT+08:00 2017
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table history_store
     *
     * @mbggenerated Mon Oct 16 17:33:47 GMT+08:00 2017
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}